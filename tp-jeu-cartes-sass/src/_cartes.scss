@use 'sass:color';
@use 'sass:math';

*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

$outsideHeight: 125px;
$outsideWidth: 80px;
$insideSize: 85%;
$spacing: 5%;
$colorFond: #279527;
$colorWhite: #ffffff;
$colorBorderBlack: #000000;

@mixin flexGen($direction, $justify, $align) {
    display: flex;
    flex-direction: $direction;
    justify-content: $justify;
    align-items: $align;
}

@mixin flexDem($justify, $align){
    display: flex;
    justify-content: $justify;
    align-self: $align;
}

borderCarte{
    border: $colorBorderBlack 1px solid;
    border-radius: 15px;
}

.first-carte__inside{
    background: $colorWhite;
    height: $insideSize;
    width: $insideSize;
    @extend borderCarte;
    display: flex;
    flex-direction: column;
    align-content: space-between;
}
.inside-container__top{
    @include flexDem(flex-start, flex-start);
    flex-grow: 1;
    padding:$spacing;
}
.inside-container__center{
    font-size: 1.5rem;
    flex-grow: 2;
    top: 40%;
    left: 35%;
    position: absolute;
}
.inside-container__bottom{
    @include flexDem(flex-end, flex-end);
    transform: rotate(180deg);
    flex-grow: 1;
    padding:$spacing;
}

@for $i from 1 through 5{
    #app__#{$i}-carte{
    background: $colorWhite;
    position: absolute;
    top: 50px * $i;
    height: $outsideHeight;
    width: $outsideWidth;
    margin-left: $spacing;
    @include flexGen(column, center, center);
    align-content: space-between;
    transform: rotate(math.random(360) * 1deg);
    @extend borderCarte;
}
}

.main-exo7{
    margin: $spacing 0 0 200px;
}
$nbCartes: 6;
$angle: 15deg;
$initialAngle: math.div($nbCartes, 2) * $angle * -1;
@for $i from 1 through $nbCartes{
    .cartes-#{$i}{
    background: $colorWhite;
    position: absolute;
    height: $outsideHeight;
    width: $outsideWidth;
    left: $i * math.div($outsideWidth, 3) + 350;
        @if $i< math.div($nbCartes, 2){
            top: math.div($outsideHeight, 10) * ($nbCartes - $i) - 5
        } @else{
            top: math.div($outsideHeight, 10) * $i + 5;
        }
    @include flexGen(column, center, center);
    rotate: $initialAngle + ($i * $angle);
    @extend borderCarte;
    }
}

.defausse{
    //width: 500px;
    //height: 500px;
    //margin: auto;
    //padding: $spacing;
    $nnCartes: 3;
    @for $i from 1 through 3{
        .defausse-carte__#{$i}{
            background: $colorWhite;
            position: relative;
            height: $outsideHeight;
            width: $outsideWidth;
            @include flexGen(column, center, center);
            align-content: space-between;
            transform: rotate(math.random(360) * 1deg);
            @extend borderCarte;
                //margin-top: math.random(50) *  2%;
                //margin-left: math.random(100) *  5%;
                top: math.random(100) *  2%;
                left: math.random(100) *  5%;
        }
    }
}